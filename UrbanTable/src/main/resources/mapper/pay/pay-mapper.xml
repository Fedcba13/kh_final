<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pay">
	<insert id="insertPay">
		insert into pay values('pseq' || lpad(seq_pay_no.nextval, 5, '0'),
								#{memberId},
								sysdate,
								${payPrice},
								0,
								default,
								#{deliverType},
								#{marketNo})
	</insert>
	
	<select id="getMarketNo" resultType="string">
		select market_no from market where market_address like '%'||#{address}||'%' and flag=2
	</select>
	
	<select id="getPayNo" resultType="string">
		select pay_no from pay where member_id=#{memberId} and pay_flag=0
	</select>
	
	<insert id="insertPayDetail">
		insert into pay_detail values('pdsq' || lpad(seq_pdt_no.nextval, 5, '0'),
									  #{payNo},
									  #{foodNo},
									  #{payDetailAmount})
	</insert>
	
	<select id="getPayDetail" resultType="paydetail">
		select * from pay_detail
	</select>
	
	<update id="updateStock">
		update stock set stock_amount = stock_amount - #{amount} where market_no = #{marketNo} and food_no = #{foodNo}
	</update>
	
	<delete id="deletePayDetail">
		delete from pay_detail where pay_no = #{payNo} and food_no = #{foodNo}
	</delete>
	
	<update id="rollbackStock">
		update stock set stock_amount = stock_amount + #{amount} where market_no = #{marketNo} and food_no = #{foodNo}
	</update>
	
	<delete id="deletePayInfo">
		delete from pay where pay_no = #{payNo} and member_id = #{memberId} and pay_flag = 0
	</delete>
	
	<update id="updatePayInfo">
		update pay set pay_flag = #{payFlag} where pay_no = #{payNo} and member_id = #{memberId} and pay_flag = 0
	</update>
	
	<insert id="insertPayment">
		insert into payment values('pmsq' || lpad(seq_pmt_no.nextval, 5, '0'),
								   #{memberId},
								   #{paymentWay},
								   #{card},
								   #{bank},
								   #{account},
								   #{payNo})
	</insert>
	
	<delete id="deleteCart">
		delete from cart where member_id=#{memberId} and flag=#{flag}
	</delete>
	<select id="getCoupons" resultType="map">
		select * from coupon where member_id=#{memberId} and coupon_end_date > sysdate and coupon_enabled = 1
	</select>
	<update id="updateCoupon">
		update coupon set coupon_enabled = 0 where coupon_id=#{couponId} and member_id=#{memberId}
	</update>
	<update id="updatePoint">
		update member set member_point = member_point - #{memberPoint} + #{addPoint} where member_id = #{memberId}
	</update>
	
	<select id="getAllCoupons" resultType="map">
		select * from(	select A.*, 1 as flag
								from (	select *
        								from coupon
        								where member_id = #{memberId}
                								and coupon_enabled = 1
                								and to_date(sysdate, 'YYYY-MM-DD') between to_date(coupon_start_date, 'YYYY-MM-DD') and to_date(coupon_end_date, 'YYYY-MM-DD') order by coupon_end_date) A
								union all
								select coupon.*, 0 as flag
								from coupon
								where member_id = #{memberId}
        						and(coupon_enabled = 0 or not to_date(sysdate, 'YYYY-MM-DD') between to_date(coupon_start_date, 'YYYY-MM-DD') and to_date(coupon_end_date, 'YYYY-MM-DD')))
			<if test='enabled != null and enabled != ""'>
				where flag = #{enabled}
			</if>
	</select>
	
	<select id="getMemberPayList" resultType="map">
		select PAY_NO, PAY_PRICE, PAY_FLAG, PAY_ENABLED, PAY_DATE, MARKET_NAME, food_name|| '외 ' || cnt || '건' as TXT, food_img
		from (select p.PAY_NO, PAY_PRICE, PAY_FLAG, PAY_ENABLED, PAY_DATE, MARKET_NAME, max(food_no) as food_no, count(p.pay_no) as cnt
		from pay p
		    left join market m
		    on p.market_no = m.market_no
		    left join pay_detail pd
		    on p.pay_no = pd.pay_no
		where p.member_id=#{memberId}
		<if test='payFlag != null and payFlag != ""'>
			and pay_flag = #{payFlag}
		</if>
		<if test='payEnabled != null and payEnabled != ""'>
			and pay_enabled = #{payEnabled}
		</if>
		group by p.PAY_NO, PAY_PRICE, PAY_FLAG, PAY_ENABLED, PAY_DATE, MARKET_NAME
		order by pay_flag, pay_date) pay1
		left join food
		    on pay1.food_no = food.food_no
	</select>
		
	<select id="getMemberPayDetail" resultType="map">
	select P.PAY_NO,PAY_DETAIL_NO, PAY_DATE, PAY_PRICE, PAY_FLAG, DELIVER_TYPE, MARKET_NAME, PAY_DETAIL_AMOUNT,
			FOOD_NAME, FOOD_IMG, (select r.review_content from review r where r.PAY_DETAIL_NO = pd.PAY_DETAIL_NO and r.review_enabled = 1) review
	from pay p
	    left join market m
	        on p.market_no = m.market_no
	    left join pay_detail pd
	        on p.pay_no = pd.pay_no
	    left join food f
	        on pd.food_no = f.food_no
	where p.member_id=#{memberId} and p.pay_no = #{payNo}
	order by pay_flag, pay_date
	</select>
</mapper>