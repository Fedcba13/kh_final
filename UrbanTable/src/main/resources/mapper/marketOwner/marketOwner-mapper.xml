<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="marketOwner">
	
	<insert id="insertMarketFounded">
		insert into market
		values('mar'||LPAD(seq_market_no.nextval, 5, '0'), 
		#{memberId}, default, #{marketTelephone}, 
		#{marketAddress}, #{marketAddress2}, 1, default, default, default, default)
	</insert>
	
	<update id="updateMemberFounded">
		update member
		set member_check=2
		where member_id=#{memberId}
	</update>
	
	<select id="selectByMemberId" resultMap="marketAndMember">
		select *
		from market join member using (member_id)
		where member_id=#{memberId} and market_enabled=1
	</select>
	<resultMap type="marketMember" id="marketAndMember">
		<id column="member_id" property="memberId"/>
		<result column="market_no" property="marketNo"/>
		<result column="market_resident" property="marketResident"/>
		<result column="market_telephone" property="marketTelephone"/>
		<result column="market_address" property="marketAddress"/>
		<result column="market_address2" property="marketAddress2"/>
		<result column="market_enabled" property="marketEnabled"/>
		<result column="flag" property="flag"/>
		<result column="market_name" property="marketName"/>
		<result column="market_holiday" property="marketHoliday"/>
		<result column="market_time" property="marketTime"/>
		<association javaType="member" property="member">
			<id column="member_id" property="memberId"/>
		    <result column="member_password" property="memberPassword"/>
		    <result column="member_name" property="memberName"/>
		    <result column="member_point" property="memberPoint"/>
		    <result column="member_address" property="memberAddress"/>
		    <result column="member_address2" property="memberAddress2"/>
		    <result column="member_phone" property="memberPhone"/>
		    <result column="member_enrolldate" property="memberEnrolldate"/>
		    <result column="member_check" property="memberCheck"/>
		    <result column="member_enabled" property="memberEnabled"/>
		</association>
	</resultMap>
	
	<update id="updateMarketFounded">
		update market 
		set market_telephone=#{marketTelephone}, market_address=#{marketAddress}, market_address2=#{marketAddress2}
		where member_id=#{memberId}
	</update>
	
	<update id="cancelFounded">
		update market 
		set market_enabled=0
		where market_no=#{marketNo}
	</update>
	
	<select id="selectMarketList" resultType="market">
		select * from market
		<trim prefix="where" suffixOverrides="and">
			market_enabled=1
			<if test="flag!=null and flag!=''">
			and flag=#{flag}
			</if>
			<if test="marketNo!=null and marketNo!=''">
			and market_no=#{marketNo}
			</if>
			<if test="marketAddress!=null and marketAddress!=''">
			and market_address like '%'||#{marketAddress}||'%'
			</if>
		</trim>
		order by market_no desc
	</select>

	<update id="updateMemberCancelFounded">
		update member
		set member_check=1
		where member_id=#{memberId}
	</update>
	
	<update id="myMarketUpdate">
		update market
		set market_telephone=#{marketTelephone}, market_holiday=#{marketHoliday}, market_time=#{marketTime}
		where market_no=#{marketNo}
	</update>
	
	<update id="myMarketOpen">
		update market
		set flag=2
		where market_no=#{marketNo}
	</update>
	
	<select id="selectEventList" resultType="event">
		select * from event
		<trim prefix="where" suffixOverrides="or">
			event_enabled=1
			<if test="marketNo!=null and marketNo!=''">
			and market_no is null
			or market_no=#{marketNo}
			</if>
		</trim>
	</select>
	
	<select id="searchMarketList" resultType="market">
		select * from market
		where market_enabled=1 and flag=#{flag} 
		and (market_address like '%'||#{marketAddress}||'%' or market_name like '%'||#{marketAddress}||'%')
		order by market_no desc
	</select>
	
	<select id="eventCompanySearch" resultType="string">
		select distinct food_company
		from food
		where food_company like '%'||#{srchCompany}||'%'
	</select>
	
	<select id="eventSearchCategory" resultType="map">
		select distinct S.food_section_name name, F.food_section_no no
		from food F left join food_section S on F.food_section_no=S.food_section_no
		where S.food_section_name like '%'||#{eventCategory}||'%'
	</select>
	
	
	<resultMap type="foodWithFoodSection" id="foodWithFoodSection">
		<id column="food_no" property="foodNo"/>
		<result column="food_name" property="foodName"/>
		<result column="food_section_no" property="foodSectionNo"/>
		<result column="food_company" property="foodCompany"/>
		<result column="food_market_price" property="foodMarketPrice"/>
		<result column="food_member_price" property="foodMemberPrice"/>
		<result column="food_enabled" property="foodEnabled"/>
		<result column="food_img" property="foodImg"/>
		<collection property="foodSectionList" ofType="foodSection">
			<id column="food_section_no" property="foodSectionNo"/>
			<result column="food_division_no" property="foodDivisionNo"/>
			<result column="food_section_name" property="foodSectionName"/>
			<result column="food_section_upper" property="foodSectionUpper"/>
		</collection>
	</resultMap>
	
	<select id="selectMarketNoByMemberId" resultType="string">
		select market_no from market 
		where member_id=#{memberId} and market_enabled=1
	</select>
	
	<!-- 
	<select id="selectFoodStockList" resultType="map">
		select *
		from food F left join stock S using(food_no)
		where market_no=#{marketNo}
		order by food_no desc
	</select>
	 -->
	
	<select id="selectFoodStockList" resultType="map">
		<!-- select *
		from food F left join stock S on F.food_no=S.food_no
		left join food_division D on F.food_section_no=D.food_section_no -->
		select *
       	from food F left join stock S on F.food_no=S.food_no
       	LEFT JOIN FOOD_SECTION S ON F.FOOD_SECTION_NO = S.FOOD_SECTION_NO
       	LEFT JOIN FOOD_UPPER U ON S.FOOD_UPPER_NO = U.FOOD_UPPER_NO
       	LEFT JOIN FOOD_DIVISION D ON U.FOOD_DIVISION_NO = D.FOOD_DIVISION_NO
		<trim prefix="where" suffixOverrides="and">
			S.market_no=#{marketNo}
			<if test="foodDivision!=null and foodDivision!=''">
			and D.food_division_no=#{foodDivision}
			</if>
			<if test="foodOrderSearchType=='food_name'">
			and F.food_name like '%'||#{foodOrderSearchKeyword}||'%'
			</if>
			<if test="foodOrderSearchType=='food_no'">
			and F.food_no like '%'||#{foodOrderSearchKeyword}||'%'
			</if>
		</trim>
		order by F.food_no desc
	</select>
	
	<select id="selectTotalContents" resultType="_int">
		select count(*)
		from food F left join stock S on F.food_no=S.food_no
		left join food_section D on F.food_section_no=D.food_section_no
		<trim prefix="where" suffixOverrides="and">
			S.market_no=#{marketNo}
			<if test="foodDivision!=null and foodDivision!=''">
			and food_division_no=#{foodDivision}
			</if>
			<if test="foodOrderSearchType=='food_name'">
			and F.food_name like '%'||#{foodOrderSearchKeyword}||'%'
			</if>
			<if test="foodOrderSearchType=='food_no'">
			and F.food_no like '%'||#{foodOrderSearchKeyword}||'%'
			</if>
		</trim>
		order by F.food_no desc
	</select>
	
	<select id="selectFoodDivision" resultType="foodDivision">
		select * from food_division
	</select>
	
	<insert id="insertMarketOrderCart">
		insert into cart
		values (#{memberId}, #{foodNo}, #{marketOrderDetailAmount}, 2)
	</insert>
	
	<select id="checkMarketCart" resultType="cart">
		select * from cart
		where member_id=#{memberId} and food_no=#{foodNo} and flag=2
	</select>
	
	<update id="updateMarketOrderCart">
		update cart
		set cart_amount=#{marketOrderDetailAmount}
		where member_id=#{memberId} and food_no=#{foodNo} and flag=2
	</update>
	
	<select id="selectMarketCartList" resultType="map">
		select C.*, F.food_name, F.food_market_price, F.food_company
		from cart C left join food F on C.food_no=F.food_no
		where C.member_id=#{memberId} and C.flag=2
	</select>
	
	<select id="selectCartTotalContents" resultType="_int">
		select count(*) 
		from cart
		where member_id=#{memberId} and flag=2
		order by food_no desc
	</select>
	
	<delete id="delMarketOrderCart">
		delete from cart
		where member_id=#{memberId} and flag=2 and food_no=#{foodNo}
	</delete>
	
	<select id="selectCartTotal" resultType="_int">
		select sum(C.cart_amount*F.food_market_price)
		from cart C left join food F on C.food_no=F.food_no
		where C.member_id=#{memberId} and C.flag=2
	</select>
	
	<select id="selectMarketOrderList" resultType="map">
		select P.pay_no, P.member_id, P.pay_price, P.pay_flag, 
		P.deliver_type, P.market_no, to_char(P.pay_date, 'yyyy-MM-dd') pay_date, 
		PM.payment_way, M.member_name, M.member_phone
		from pay P left join payment PM on P.pay_no=PM.pay_no
		left join member M on P.member_id=M.member_id
		<trim prefix="where" suffixOverrides="and">
			P.pay_enabled=1 and M.member_enabled=1 
			<if test="marketNo!=null and marketNo!=''">
			and P.market_no=#{marketNo}
			</if>
			<if test="orderSearchKeyword!=null and orderSearchKeyword!=''">
				<if test="orderSearchType=='payNo'">
				and P.pay_no like '%'||#{orderSearchKeyword}||'%'
				</if>
				<if test="orderSearchType=='orderId'">
				and P.member_id like '%'||#{orderSearchKeyword}||'%'
				</if>
				<if test="orderSearchType=='orderName'">
				and M.member_name like '%'||#{orderSearchKeyword}||'%'
				</if>
			</if>
			<if test="payFlag!=9">
			and P.pay_flag like '%'||#{payFlag}||'%'
			</if>
			<if test="deliverType!=null and deliverType!=''">
			and P.deliver_type like '%'||#{deliverType}||'%'
			</if>
			<if test="payStartDate!=null and payStartDate!=''">
				<if test="payEndDate eq ''">
				and P.pay_date >= to_date(#{payStartDate}, 'yy/MM/dd')
				</if>
				<if test="payEndDate!=null and payEndDate!=''">
				and (P.pay_date between to_date(#{payStartDate}, 'yy/MM/dd') and (to_date(#{payEndDate}, 'yy/MM/dd')+1))
				</if>
			</if>
		</trim>
		order by P.pay_date desc
	</select>
	
	<select id="selectMarketOrderTotalContents" resultType="_int">
		select count(*)
		from pay P left join payment PM on P.pay_no=PM.pay_no
		left join member M on P.member_id=M.member_id
		<trim prefix="where" suffixOverrides="and">
			P.pay_enabled=1 and M.member_enabled=1 
			<if test="marketNo!=null and marketNo!=''">
			and P.market_no=#{marketNo}
			</if>
			<if test="orderSearchKeyword!=null and orderSearchKeyword!=''">
				<if test="orderSearchType=='payNo'">
				and P.pay_no like '%'||#{orderSearchKeyword}||'%'
				</if>
				<if test="orderSearchType=='orderId'">
				and P.member_id like '%'||#{orderSearchKeyword}||'%'
				</if>
				<if test="orderSearchType=='orderName'">
				and M.member_name like '%'||#{orderSearchKeyword}||'%'
				</if>
			</if>
			<if test="payFlag!=9">
			and P.pay_flag like '%'||#{payFlag}||'%'
			</if>
			<if test="deliverType!=null and deliverType!=''">
			and P.deliver_type like '%'||#{deliverType}||'%'
			</if>
			<if test="payStartDate!=null and payStartDate!=''">
				<if test="payEndDate eq ''">
				and P.pay_date >= to_date(#{payStartDate}, 'yy/MM/dd')
				</if>
				<if test="payEndDate!=null and payEndDate!=''">
				and (P.pay_date between to_date(#{payStartDate}, 'yy/MM/dd') and (to_date(#{payEndDate}, 'yy/MM/dd')+1))
				</if>
			</if>
		</trim>
		order by P.pay_date desc
	</select>
	
	<select id="selectOrderDetailFoodByPayNo" resultType="map">
		select P.pay_flag, D.*, F.food_name, F.food_company, F.food_member_price, F.food_img
		from pay P left join pay_detail D on P.pay_no=D.pay_no
		left join food F on D.food_no=F.food_no
		where P.pay_no=#{payNo}
	</select>
	
	<select id="selectOrderDetailPayByPayNo" resultType="map">
		select distinct P.pay_no, P.pay_date, PM.payment_way, P.pay_price
		from pay P left join pay_detail D on P.pay_no=D.pay_no
		left join payment PM on PM.pay_no=P.pay_no
		where P.pay_no=#{payNo}
	</select>
	
	<select id="selectOrderDetailMemberByPayNo" resultType="map">
		select P.member_id, M.member_name, M.member_address, 
		M.member_address2, M.member_phone, P.deliver_type, P.pay_flag
		from pay P left join member M on P.member_id=M.member_id
		where P.pay_no=#{payNo}
	</select>
	
	<update id="updatePayFlag">
		update pay set pay_flag=2
		where pay_no=#{payNo}
	</update>
	
	<select id="selectChartWeek" resultType="map">
		select market_no, to_char(pay_date, 'yyyy-MM-dd') as paydate, count(*) as cnt, 
		avg(pay_price) as avg_price
		from pay
		where pay_date between sysdate-7 and sysdate
		group by market_no, to_char(pay_date, 'yyyy-MM-dd')
		having market_no=#{marketNo}
		order by to_char(pay_date, 'yyyy-MM-dd') asc
	</select>
	
	<select id="selectChartMonth" resultType="map">
		select market_no, to_char(pay_date, 'yyyy-MM') as paydate, count(*) as cnt, 
		avg(pay_price) as avg_price
		from pay
		where to_char(pay_date, 'yyyy') = to_char(sysdate, 'yyyy')
		group by to_char(pay_date, 'yyyy-MM'), market_no
		having market_no=#{marketNo}
		order by to_char(pay_date, 'yyyy-MM') asc
	</select>
	
	<select id="selectChartCategory" resultType="map">
		select P.market_no, D.food_division_no, D.food_division_name, sum(PD.pay_detail_amount) as amount,
		sum(PD.pay_detail_amount*F.food_member_price) as total
		from pay_detail PD left join food F on PD.food_no=F.food_no
		left join food_section S on F.food_section_no=S.food_section_no
		left join food_upper U on U.food_upper_no=S.food_upper_no
		left join food_division D on U.food_division_no=D.food_division_no
		left join pay P on P.pay_no=PD.pay_no
		group by P.market_no, D.food_division_no, D.food_division_name
		having P.market_no=#{marketNo}
	</select>
	
	<select id="selectTotalPayDetail" resultType="_int">
		select sum(pay_detail_amount) 
		from pay_detail PD left join pay P on PD.pay_no=P.pay_no
		where P.market_no=#{marketNo}
	</select>
	
</mapper>